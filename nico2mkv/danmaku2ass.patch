diff --git a/danmaku2ass.py b/danmaku2ass.py
index e2a72a5..a6ead2c 100755
--- a/danmaku2ass.py
+++ b/danmaku2ass.py
@@ -131,30 +131,18 @@ def ProbeCommentFormat(f):
 # and CommentFormatMap.
 #
 
-
 def ReadCommentsNiconicoYtdlpJson(f, fontsize):
     NiconicoColorMap = {'red': 0xff0000, 'pink': 0xff8080, 'orange': 0xffcc00, 'yellow': 0xffff00, 'green': 0x00ff00, 'cyan': 0x00ffff, 'blue': 0x0000ff, 'purple': 0xc000ff, 'black': 0x000000, 'niconicowhite': 0xcccc99, 'white2': 0xcccc99, 'truered': 0xcc0033, 'red2': 0xcc0033, 'passionorange': 0xff6600, 'orange2': 0xff6600, 'madyellow': 0x999900, 'yellow2': 0x999900, 'elementalgreen': 0x00cc66, 'green2': 0x00cc66, 'marineblue': 0x33ffcc, 'blue2': 0x33ffcc, 'nobleviolet': 0x6633cc, 'purple2': 0x6633cc}
     json_list = json.load(f)
     for json_dict in json_list:
-        if len(json_dict) != 1:
-            logging.warning(_('Rare json: %s') % str(json_dict))
-            continue
-        (key, value), = json_dict.items()
-        if key != 'chat':
-            continue
-        del key
-        comment = value['content']
-        if comment.startswith('/'):
-            logging.warning(_('Advanced comment: %s') % comment)
-        pos = 0
-        color = 0xffffff
-        size = fontsize
-        mail = ""
-        try:
-            mail = value['mail']
-        except KeyError:
-            pass
-        for mailstyle in mail.split():
+        timeline  = json_dict["vposMs"] / 1000
+        timestamp = json_dict["postedAt"]
+        no        = json_dict["no"]
+        comment   = json_dict["body"]
+        pos       = 0
+        color     = 0xffffff
+        size      = fontsize
+        for mailstyle in json_dict["commands"]:
             if mailstyle == 'ue':
                 pos = 1
             elif mailstyle == 'shita':
@@ -165,11 +153,8 @@ def ReadCommentsNiconicoYtdlpJson(f, fontsize):
                 size = fontsize * 0.64
             elif mailstyle in NiconicoColorMap:
                 color = NiconicoColorMap[mailstyle]
-        timeline = max(value['vpos'], 0) * 0.01
-        timestamp = value['date']
-        no = value['no']
-        height = (comment.count('\n') + 1) * size
-        width = CalculateLength(comment) * size
+        height = (comment.count("\n") + 1) * size
+        width  = CalculateLength(comment) * size
         yield (timeline, timestamp, no, comment, pos, color, size, height, width)
 
 def ReadCommentsNiconico(f, fontsize):
